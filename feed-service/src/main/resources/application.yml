spring:
  application:
    name: feed-service
  config:
    import: configserver:http://localhost:8888
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: "http://localhost:9090/realms/social-media"
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: postGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: '*'
        spring.json.type.mapping: info:com.tqkien03.feedservice.messaging.PostEventInfo


management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    instances:
      feed-service:
        registerHealthIndicator: true
        event-consumer-buffer-size: 10
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        minimum-number-of-calls: 5
  timelimiter:
    instances:
      feed-service:
        timeout-duration: 3s
  retry:
    instances:
      feed-service:
        max-attempts: 3
        wait-duration: 5s